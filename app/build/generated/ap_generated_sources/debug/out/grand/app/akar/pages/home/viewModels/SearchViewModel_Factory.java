// Generated by Dagger (https://dagger.dev).
package grand.app.akar.pages.home.viewModels;

import dagger.internal.Factory;
import grand.app.akar.repository.HomeRepository;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SearchViewModel_Factory implements Factory<SearchViewModel> {
  private final Provider<HomeRepository> homeRepositoryProvider;

  private final Provider<HomeRepository> homeRepositoryProvider2;

  public SearchViewModel_Factory(Provider<HomeRepository> homeRepositoryProvider,
      Provider<HomeRepository> homeRepositoryProvider2) {
    this.homeRepositoryProvider = homeRepositoryProvider;
    this.homeRepositoryProvider2 = homeRepositoryProvider2;
  }

  @Override
  public SearchViewModel get() {
    SearchViewModel instance = newInstance(homeRepositoryProvider.get());
    SearchViewModel_MembersInjector.injectHomeRepository(instance, homeRepositoryProvider2.get());
    return instance;
  }

  public static SearchViewModel_Factory create(Provider<HomeRepository> homeRepositoryProvider,
      Provider<HomeRepository> homeRepositoryProvider2) {
    return new SearchViewModel_Factory(homeRepositoryProvider, homeRepositoryProvider2);
  }

  public static SearchViewModel newInstance(HomeRepository homeRepository) {
    return new SearchViewModel(homeRepository);
  }
}
