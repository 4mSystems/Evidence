// Generated by data binding compiler. Do not edit!
package te.app.evidence.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;
import te.app.evidence.R;
import te.app.evidence.pages.settings.viewModels.SettingsViewModel;

public abstract class FragmentContactBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatButton appCompatButtonNext;

  @NonNull
  public final AppCompatImageView homeTitle;

  @NonNull
  public final TextInputLayout inputContactMessage;

  @NonNull
  public final TextInputLayout inputName;

  @NonNull
  public final TextInputLayout inputPhone;

  @NonNull
  public final TextInputLayout inputRegisterEmail;

  @NonNull
  public final CardView loginContainer;

  @Bindable
  protected SettingsViewModel mViewmodel;

  protected FragmentContactBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatButton appCompatButtonNext, AppCompatImageView homeTitle,
      TextInputLayout inputContactMessage, TextInputLayout inputName, TextInputLayout inputPhone,
      TextInputLayout inputRegisterEmail, CardView loginContainer) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appCompatButtonNext = appCompatButtonNext;
    this.homeTitle = homeTitle;
    this.inputContactMessage = inputContactMessage;
    this.inputName = inputName;
    this.inputPhone = inputPhone;
    this.inputRegisterEmail = inputRegisterEmail;
    this.loginContainer = loginContainer;
  }

  public abstract void setViewmodel(@Nullable SettingsViewModel viewmodel);

  @Nullable
  public SettingsViewModel getViewmodel() {
    return mViewmodel;
  }

  @NonNull
  public static FragmentContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_contact, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentContactBinding>inflateInternal(inflater, R.layout.fragment_contact, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_contact, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentContactBinding>inflateInternal(inflater, R.layout.fragment_contact, null, false, component);
  }

  public static FragmentContactBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentContactBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentContactBinding)bind(component, view, R.layout.fragment_contact);
  }
}
