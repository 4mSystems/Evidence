// Generated by data binding compiler. Do not edit!
package te.app.evidence.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.github.florent37.expansionpanel.ExpansionHeader;
import com.github.florent37.expansionpanel.ExpansionLayout;
import java.lang.Deprecated;
import java.lang.Object;
import te.app.evidence.R;
import te.app.evidence.customViews.views.CustomTextViewMedium;
import te.app.evidence.customViews.views.CustomTextViewRegular;
import te.app.evidence.pages.attachments.viewModels.AttachmentsItemViewModel;

public abstract class ItemAttachmentBinding extends ViewDataBinding {
  @NonNull
  public final CustomTextViewRegular controlText;

  @NonNull
  public final CustomTextViewRegular delete;

  @NonNull
  public final CustomTextViewRegular edit;

  @NonNull
  public final ExpansionLayout expansionLayoutSessions;

  @NonNull
  public final CustomTextViewRegular fileDescText;

  @NonNull
  public final CustomTextViewRegular fileDescValue;

  @NonNull
  public final CustomTextViewRegular fileText;

  @NonNull
  public final AppCompatImageView fileValue;

  @NonNull
  public final AppCompatImageView iconDownQu;

  @NonNull
  public final ExpansionHeader layoutSessionHeader;

  @NonNull
  public final CustomTextViewMedium tvQualifications;

  @NonNull
  public final View v1;

  @NonNull
  public final View v2;

  @NonNull
  public final View v3;

  @Bindable
  protected AttachmentsItemViewModel mItemViewModel;

  protected ItemAttachmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CustomTextViewRegular controlText, CustomTextViewRegular delete, CustomTextViewRegular edit,
      ExpansionLayout expansionLayoutSessions, CustomTextViewRegular fileDescText,
      CustomTextViewRegular fileDescValue, CustomTextViewRegular fileText,
      AppCompatImageView fileValue, AppCompatImageView iconDownQu,
      ExpansionHeader layoutSessionHeader, CustomTextViewMedium tvQualifications, View v1, View v2,
      View v3) {
    super(_bindingComponent, _root, _localFieldCount);
    this.controlText = controlText;
    this.delete = delete;
    this.edit = edit;
    this.expansionLayoutSessions = expansionLayoutSessions;
    this.fileDescText = fileDescText;
    this.fileDescValue = fileDescValue;
    this.fileText = fileText;
    this.fileValue = fileValue;
    this.iconDownQu = iconDownQu;
    this.layoutSessionHeader = layoutSessionHeader;
    this.tvQualifications = tvQualifications;
    this.v1 = v1;
    this.v2 = v2;
    this.v3 = v3;
  }

  public abstract void setItemViewModel(@Nullable AttachmentsItemViewModel itemViewModel);

  @Nullable
  public AttachmentsItemViewModel getItemViewModel() {
    return mItemViewModel;
  }

  @NonNull
  public static ItemAttachmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_attachment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemAttachmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemAttachmentBinding>inflateInternal(inflater, R.layout.item_attachment, root, attachToRoot, component);
  }

  @NonNull
  public static ItemAttachmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_attachment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemAttachmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemAttachmentBinding>inflateInternal(inflater, R.layout.item_attachment, null, false, component);
  }

  public static ItemAttachmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemAttachmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemAttachmentBinding)bind(component, view, R.layout.item_attachment);
  }
}
