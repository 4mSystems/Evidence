// Generated by Dagger (https://dagger.dev).
package grand.app.akar.pages.myAccount.viewModels;

import dagger.internal.Factory;
import grand.app.akar.repository.SettingsRepository;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyAccountViewModel_Factory implements Factory<MyAccountViewModel> {
  private final Provider<SettingsRepository> marketRepositoryProvider;

  private final Provider<SettingsRepository> repositoryProvider;

  public MyAccountViewModel_Factory(Provider<SettingsRepository> marketRepositoryProvider,
      Provider<SettingsRepository> repositoryProvider) {
    this.marketRepositoryProvider = marketRepositoryProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public MyAccountViewModel get() {
    MyAccountViewModel instance = newInstance(marketRepositoryProvider.get());
    MyAccountViewModel_MembersInjector.injectRepository(instance, repositoryProvider.get());
    return instance;
  }

  public static MyAccountViewModel_Factory create(
      Provider<SettingsRepository> marketRepositoryProvider,
      Provider<SettingsRepository> repositoryProvider) {
    return new MyAccountViewModel_Factory(marketRepositoryProvider, repositoryProvider);
  }

  public static MyAccountViewModel newInstance(SettingsRepository marketRepository) {
    return new MyAccountViewModel(marketRepository);
  }
}
