// Generated by data binding compiler. Do not edit!
package te.app.evidence.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.Barrier;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.github.florent37.expansionpanel.ExpansionHeader;
import com.github.florent37.expansionpanel.ExpansionLayout;
import java.lang.Deprecated;
import java.lang.Object;
import te.app.evidence.R;
import te.app.evidence.customViews.views.CustomTextViewMedium;
import te.app.evidence.customViews.views.CustomTextViewRegular;
import te.app.evidence.pages.clients.viewModels.ClientsItemViewModel;

public abstract class ItemClientsBinding extends ViewDataBinding {
  @NonNull
  public final CustomTextViewRegular attachments;

  @NonNull
  public final Barrier br5;

  @NonNull
  public final CustomTextViewRegular clientAddressText;

  @NonNull
  public final CustomTextViewRegular clientAddressValue;

  @NonNull
  public final CustomTextViewRegular clientNoteText;

  @NonNull
  public final CustomTextViewRegular clientNoteValue;

  @NonNull
  public final CustomTextViewRegular clientTypeText;

  @NonNull
  public final CustomTextViewRegular clientTypeValue;

  @NonNull
  public final CustomTextViewRegular delete;

  @NonNull
  public final CustomTextViewRegular edit;

  @NonNull
  public final ExpansionLayout expansionLayoutClients;

  @NonNull
  public final AppCompatImageView iconDownQu;

  @NonNull
  public final ExpansionHeader layoutClientsHeader;

  @NonNull
  public final CustomTextViewRegular permission;

  @NonNull
  public final CustomTextViewMedium tvQualifications;

  @NonNull
  public final CustomTextViewRegular unitText;

  @NonNull
  public final CustomTextViewRegular unitValue;

  @NonNull
  public final View v1;

  @NonNull
  public final View v2;

  @NonNull
  public final View v3;

  @NonNull
  public final View v4;

  @NonNull
  public final View v5;

  @NonNull
  public final View v8;

  @Bindable
  protected ClientsItemViewModel mItemViewModel;

  protected ItemClientsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CustomTextViewRegular attachments, Barrier br5, CustomTextViewRegular clientAddressText,
      CustomTextViewRegular clientAddressValue, CustomTextViewRegular clientNoteText,
      CustomTextViewRegular clientNoteValue, CustomTextViewRegular clientTypeText,
      CustomTextViewRegular clientTypeValue, CustomTextViewRegular delete,
      CustomTextViewRegular edit, ExpansionLayout expansionLayoutClients,
      AppCompatImageView iconDownQu, ExpansionHeader layoutClientsHeader,
      CustomTextViewRegular permission, CustomTextViewMedium tvQualifications,
      CustomTextViewRegular unitText, CustomTextViewRegular unitValue, View v1, View v2, View v3,
      View v4, View v5, View v8) {
    super(_bindingComponent, _root, _localFieldCount);
    this.attachments = attachments;
    this.br5 = br5;
    this.clientAddressText = clientAddressText;
    this.clientAddressValue = clientAddressValue;
    this.clientNoteText = clientNoteText;
    this.clientNoteValue = clientNoteValue;
    this.clientTypeText = clientTypeText;
    this.clientTypeValue = clientTypeValue;
    this.delete = delete;
    this.edit = edit;
    this.expansionLayoutClients = expansionLayoutClients;
    this.iconDownQu = iconDownQu;
    this.layoutClientsHeader = layoutClientsHeader;
    this.permission = permission;
    this.tvQualifications = tvQualifications;
    this.unitText = unitText;
    this.unitValue = unitValue;
    this.v1 = v1;
    this.v2 = v2;
    this.v3 = v3;
    this.v4 = v4;
    this.v5 = v5;
    this.v8 = v8;
  }

  public abstract void setItemViewModel(@Nullable ClientsItemViewModel itemViewModel);

  @Nullable
  public ClientsItemViewModel getItemViewModel() {
    return mItemViewModel;
  }

  @NonNull
  public static ItemClientsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_clients, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemClientsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemClientsBinding>inflateInternal(inflater, R.layout.item_clients, root, attachToRoot, component);
  }

  @NonNull
  public static ItemClientsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_clients, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemClientsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemClientsBinding>inflateInternal(inflater, R.layout.item_clients, null, false, component);
  }

  public static ItemClientsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemClientsBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemClientsBinding)bind(component, view, R.layout.item_clients);
  }
}
