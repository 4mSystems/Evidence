// Generated by Dagger (https://dagger.dev).
package grand.app.akar.repository;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import grand.app.akar.connection.ConnectionHelper;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthRepository_MembersInjector implements MembersInjector<AuthRepository> {
  private final Provider<ConnectionHelper> connectionHelperProvider;

  public AuthRepository_MembersInjector(Provider<ConnectionHelper> connectionHelperProvider) {
    this.connectionHelperProvider = connectionHelperProvider;
  }

  public static MembersInjector<AuthRepository> create(
      Provider<ConnectionHelper> connectionHelperProvider) {
    return new AuthRepository_MembersInjector(connectionHelperProvider);}

  @Override
  public void injectMembers(AuthRepository instance) {
    injectConnectionHelper(instance, connectionHelperProvider.get());
  }

  @InjectedFieldSignature("grand.app.akar.repository.AuthRepository.connectionHelper")
  public static void injectConnectionHelper(AuthRepository instance,
      ConnectionHelper connectionHelper) {
    instance.connectionHelper = connectionHelper;
  }
}
