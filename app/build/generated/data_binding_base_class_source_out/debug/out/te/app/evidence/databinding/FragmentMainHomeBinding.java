// Generated by data binding compiler. Do not edit!
package te.app.evidence.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.helper.widget.Flow;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.Deprecated;
import java.lang.Object;
import te.app.evidence.R;
import te.app.evidence.customViews.views.CustomTextViewMedium;
import te.app.evidence.customViews.views.CustomTextViewRegular;
import te.app.evidence.pages.home.viewModels.HomeViewModel;

public abstract class FragmentMainHomeBinding extends ViewDataBinding {
  @NonNull
  public final Flow flow3;

  @NonNull
  public final CircleImageView icMainImg;

  @NonNull
  public final CircleImageView icUserImg;

  @NonNull
  public final CustomTextViewRegular tPoints;

  @NonNull
  public final CustomTextViewMedium tPointsValue;

  @NonNull
  public final CustomTextViewMedium tvUsername;

  @NonNull
  public final View view;

  @NonNull
  public final CustomTextViewRegular welcome;

  @Bindable
  protected HomeViewModel mViewmodel;

  protected FragmentMainHomeBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Flow flow3, CircleImageView icMainImg, CircleImageView icUserImg,
      CustomTextViewRegular tPoints, CustomTextViewMedium tPointsValue,
      CustomTextViewMedium tvUsername, View view, CustomTextViewRegular welcome) {
    super(_bindingComponent, _root, _localFieldCount);
    this.flow3 = flow3;
    this.icMainImg = icMainImg;
    this.icUserImg = icUserImg;
    this.tPoints = tPoints;
    this.tPointsValue = tPointsValue;
    this.tvUsername = tvUsername;
    this.view = view;
    this.welcome = welcome;
  }

  public abstract void setViewmodel(@Nullable HomeViewModel viewmodel);

  @Nullable
  public HomeViewModel getViewmodel() {
    return mViewmodel;
  }

  @NonNull
  public static FragmentMainHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main_home, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentMainHomeBinding>inflateInternal(inflater, R.layout.fragment_main_home, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentMainHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main_home, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentMainHomeBinding>inflateInternal(inflater, R.layout.fragment_main_home, null, false, component);
  }

  public static FragmentMainHomeBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentMainHomeBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentMainHomeBinding)bind(component, view, R.layout.fragment_main_home);
  }
}
