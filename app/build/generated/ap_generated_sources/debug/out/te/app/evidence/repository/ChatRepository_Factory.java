// Generated by Dagger (https://dagger.dev).
package te.app.evidence.repository;

import dagger.internal.Factory;
import javax.inject.Provider;
import te.app.evidence.connection.ConnectionHelper;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatRepository_Factory implements Factory<ChatRepository> {
  private final Provider<ConnectionHelper> connectionHelperProvider;

  private final Provider<ConnectionHelper> connectionHelperProvider2;

  public ChatRepository_Factory(Provider<ConnectionHelper> connectionHelperProvider,
      Provider<ConnectionHelper> connectionHelperProvider2) {
    this.connectionHelperProvider = connectionHelperProvider;
    this.connectionHelperProvider2 = connectionHelperProvider2;
  }

  @Override
  public ChatRepository get() {
    ChatRepository instance = newInstance(connectionHelperProvider.get());
    ChatRepository_MembersInjector.injectConnectionHelper(instance, connectionHelperProvider2.get());
    return instance;
  }

  public static ChatRepository_Factory create(Provider<ConnectionHelper> connectionHelperProvider,
      Provider<ConnectionHelper> connectionHelperProvider2) {
    return new ChatRepository_Factory(connectionHelperProvider, connectionHelperProvider2);
  }

  public static ChatRepository newInstance(ConnectionHelper connectionHelper) {
    return new ChatRepository(connectionHelper);
  }
}
