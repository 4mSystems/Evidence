// Generated by Dagger (https://dagger.dev).
package grand.app.akar.pages.favorites.viewModels;

import dagger.internal.Factory;
import grand.app.akar.repository.AdsRepository;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyFavoritesViewModel_Factory implements Factory<MyFavoritesViewModel> {
  private final Provider<AdsRepository> adsRepositoryProvider;

  private final Provider<AdsRepository> adsRepositoryProvider2;

  public MyFavoritesViewModel_Factory(Provider<AdsRepository> adsRepositoryProvider,
      Provider<AdsRepository> adsRepositoryProvider2) {
    this.adsRepositoryProvider = adsRepositoryProvider;
    this.adsRepositoryProvider2 = adsRepositoryProvider2;
  }

  @Override
  public MyFavoritesViewModel get() {
    MyFavoritesViewModel instance = newInstance(adsRepositoryProvider.get());
    MyFavoritesViewModel_MembersInjector.injectAdsRepository(instance, adsRepositoryProvider2.get());
    return instance;
  }

  public static MyFavoritesViewModel_Factory create(Provider<AdsRepository> adsRepositoryProvider,
      Provider<AdsRepository> adsRepositoryProvider2) {
    return new MyFavoritesViewModel_Factory(adsRepositoryProvider, adsRepositoryProvider2);
  }

  public static MyFavoritesViewModel newInstance(AdsRepository adsRepository) {
    return new MyFavoritesViewModel(adsRepository);
  }
}
