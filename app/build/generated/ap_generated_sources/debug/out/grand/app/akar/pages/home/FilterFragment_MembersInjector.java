// Generated by Dagger (https://dagger.dev).
package grand.app.akar.pages.home;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import grand.app.akar.pages.home.viewModels.FilterViewModel;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FilterFragment_MembersInjector implements MembersInjector<FilterFragment> {
  private final Provider<FilterViewModel> viewModelProvider;

  public FilterFragment_MembersInjector(Provider<FilterViewModel> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<FilterFragment> create(
      Provider<FilterViewModel> viewModelProvider) {
    return new FilterFragment_MembersInjector(viewModelProvider);}

  @Override
  public void injectMembers(FilterFragment instance) {
    injectViewModel(instance, viewModelProvider.get());
  }

  @InjectedFieldSignature("grand.app.akar.pages.home.FilterFragment.viewModel")
  public static void injectViewModel(FilterFragment instance, FilterViewModel viewModel) {
    instance.viewModel = viewModel;
  }
}
