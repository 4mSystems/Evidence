// Generated by data binding compiler. Do not edit!
package te.app.evidence.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import te.app.evidence.R;
import te.app.evidence.customViews.views.CustomTextViewMedium;
import te.app.evidence.customViews.views.CustomTextViewRegular;
import te.app.evidence.pages.places.viewModels.ItemPlacesViewModel;

public abstract class ItemPlaceBinding extends ViewDataBinding {
  @NonNull
  public final CustomTextViewMedium address;

  @NonNull
  public final AppCompatImageView icPlace;

  @NonNull
  public final AppCompatImageView icShare;

  @NonNull
  public final CustomTextViewRegular tvMap;

  @NonNull
  public final CustomTextViewMedium userName;

  @Bindable
  protected ItemPlacesViewModel mItemViewModel;

  protected ItemPlaceBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CustomTextViewMedium address, AppCompatImageView icPlace, AppCompatImageView icShare,
      CustomTextViewRegular tvMap, CustomTextViewMedium userName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.address = address;
    this.icPlace = icPlace;
    this.icShare = icShare;
    this.tvMap = tvMap;
    this.userName = userName;
  }

  public abstract void setItemViewModel(@Nullable ItemPlacesViewModel itemViewModel);

  @Nullable
  public ItemPlacesViewModel getItemViewModel() {
    return mItemViewModel;
  }

  @NonNull
  public static ItemPlaceBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_place, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemPlaceBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemPlaceBinding>inflateInternal(inflater, R.layout.item_place, root, attachToRoot, component);
  }

  @NonNull
  public static ItemPlaceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_place, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemPlaceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemPlaceBinding>inflateInternal(inflater, R.layout.item_place, null, false, component);
  }

  public static ItemPlaceBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemPlaceBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemPlaceBinding)bind(component, view, R.layout.item_place);
  }
}
